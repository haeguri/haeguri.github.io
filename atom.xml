<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haeguri 블로그</title>
  
  <subtitle>기록하기 위한 블로그</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/haeguri/"/>
  <updated>2018-06-26T17:04:52.000Z</updated>
  <id>https://github.com/haeguri/</id>
  
  <author>
    <name>Haegyun Jung</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>자바스크립트 변수 스코프</title>
    <link href="https://github.com/haeguri/2018/06/25/hello-world/"/>
    <id>https://github.com/haeguri/2018/06/25/hello-world/</id>
    <published>2018-06-25T14:19:11.000Z</published>
    <updated>2018-06-26T17:04:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>변수의 스코프(Scope)는 간단하게 말해서 어떤 변수에 접근할 수 있는 <strong>유효 범위</strong>이다. 자바스크립트에서 변수의 스코프는 크게 전역 스코프와 지역 스코프 두 가지로 나눌 수 있다.</p><h2 id="전역-스코프"><a href="#전역-스코프" class="headerlink" title="전역 스코프"></a>전역 스코프</h2><p>전역 스코프는 웹 페이지에서 동작하는 자바스크립트의 모든 영역에 걸친 <strong>유효 범위</strong>를 갖는다. 그리고 이 전역 스코프에 선언된 변수는 전역 변수라고 한다. 전역 변수를 선언하기 위해서는 함수 밖에서 <code>var</code>를 이용하여 변수를 선언하면 된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var globalA = 1;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function print() &#123;</span></span><br><span class="line"><span class="undefined">        console.log(globalA);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log(globalA);</span></span><br><span class="line"><span class="undefined">    print();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log(globalA);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ 실행결과 ]</span><br><span class="line">----------</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>또 다른 방법은 자바스크립트 내장 객체인 <code>window</code> 객체의 프로퍼티에 전역 데이터를 추가하는 방법이다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    window.globalA = 1;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function print() &#123; </span></span><br><span class="line"><span class="undefined">        console.log(globalA); </span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log(globalA);</span></span><br><span class="line"><span class="undefined">    print();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    console.log(globalA); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ 실행결과 ]</span><br><span class="line">----------</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><code>window</code> 객체의 프로퍼티로 <code>globalA</code>를 추가하면, 앞에서 <code>var</code>로 선언한 것과 동일하게 전역변수로서 사용할 수 있게 됐다. 그리고 반대로 <code>var</code>로 전역 변수를 선언하더라도 <code>window</code> 객체의 프로퍼티로 추가된다. 이것은 <code>Object.prototype.hasOwnProperty</code> 메서드로 확인해볼 수 있다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var globalA = 1;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">console.log(window.hasOwnProperty(‘globalA’));</span></span><br><span class="line"><span class="undefined">console.log(window.globalA === 1); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ 실행결과 ]</span><br><span class="line">----------</span><br><span class="line">true</span><br><span class="line">true</span><br></pre></td></tr></table></figure><p> 전역 변수는 어플리케이션의 모든 영역에서 접근해서 값을 읽거나 쓸 수 있다. 예를 들어서 전역 변수에 중요한 데이터를 저장하고 내가 작성한 어플리케이션이 실행되던 중에 우연히 다른 라이브러리 코드에서 내가 만든 전역 변수의 값을 변경할 수도 있다. 중요한 데이터가 변경이 된 후에는 프로그램에 버그가 생길 확률이 높다. 따라서 전역 변수를 선언하는 것은 최대한 피해야 한다.</p><h2 id="지역-스코프"><a href="#지역-스코프" class="headerlink" title="지역 스코프"></a>지역 스코프</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;변수의 스코프(Scope)는 간단하게 말해서 어떤 변수에 접근할 수 있는 &lt;strong&gt;유효 범위&lt;/strong&gt;이다. 자바스크립트에서 변수의 스코프는 크게 전역 스코프와 지역 스코프 두 가지로 나눌 수 있다.&lt;/p&gt;
&lt;h2 id=&quot;전역-스코프&quot;
      
    
    </summary>
    
    
  </entry>
  
</feed>
